;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables (list 
   (semanticdb-table "emacs-init.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [200 213]) ("*emacs-load-start*" variable (:default-value (current-time)) nil [215 257]) ("setq" code nil nil [258 281]) ("*default-font*" variable (:default-value "pragmata tt") nil [283 321]) ("*folding*" variable nil nil [322 350]) ("*emacs-server*" variable nil nil [406 434]) ("*tramp*" variable (:default-value t) nil [493 519]) ("*cedet*" variable (:default-value t) nil [551 577]) ("*icicles*" variable (:default-value t) nil [631 657]) ("*color-theme*" variable (:default-value t) nil [700 726]) ("*yasnippet*" variable (:default-value t) nil [767 793]) ("*timestamp*" variable (:default-value t) nil [845 871]) ("*slime*" variable (:default-value t) nil [916 942]) ("*erlang*" variable (:default-value t) nil [960 986]) ("*clojure*" variable (:default-value t) nil [1006 1032]) ("setq" code nil nil [1054 1094]) ("add-path" function (:arguments ("p")) nil [1096 1169]) ("add-path" code nil nil [1216 1229]) ("add-path" code nil nil [1230 1250]) ("add-path" code nil nil [1251 1269]) ("add-path" code nil nil [1270 1288]) ("add-path" code nil nil [1289 1305]) ("add-path" code nil nil [1306 1325]) ("add-to-list" code nil nil [1326 1370]) ("when" code nil nil [1372 1494]) ("when" code nil nil [1496 1628]) ("print" code nil nil [1630 1653]) ("when" code nil nil [1654 2926]) ("when" code nil nil [2929 3370]) ("custom-set-variables" code nil nil [3372 4690]) ("when" code nil nil [4732 5030]) ("set-register" code nil nil [5032 5086]) ("set-register" code nil nil [5103 5153]) ("fset" code nil nil [5233 5262]) ("go-back-window" function nil nil [5288 5365]) ("set-newline-and-indent" function nil nil [5417 5495]) ("insert-name-email" function nil nil [5497 5591]) ("insert-date" function (:user-visible-flag t :arguments ("prefix")) nil [5593 5995]) ("global-set-key" code nil nil [5997 6076]) ("global-set-key" code nil nil [6077 6157]) ("global-set-key" code nil nil [6158 6229]) ("global-set-key" code nil nil [6230 6302]) ("global-set-key" code nil nil [6304 6346]) ("global-set-key" code nil nil [6347 6395]) ("global-set-key" code nil nil [6429 6478]) ("global-set-key" code nil nil [6479 6521]) ("global-set-key" code nil nil [6579 6627]) ("global-set-key" code nil nil [6686 6741]) ("global-set-key" code nil nil [6742 6797]) ("global-set-key" code nil nil [6798 6853]) ("global-set-key" code nil nil [6854 6909]) ("global-set-key" code nil nil [6911 6962]) ("global-set-key" code nil nil [6964 7016]) ("global-set-key" code nil nil [7018 7058]) ("global-set-key" code nil nil [7059 7099]) ("global-set-key" code nil nil [7100 7142]) ("global-set-key" code nil nil [7213 7258]) ("global-set-key" code nil nil [7259 7306]) ("global-set-key" code nil nil [7357 7398]) ("global-set-key" code nil nil [7399 7444]) ("global-set-key" code nil nil [7476 7520]) ("global-set-key" code nil nil [7521 7565]) ("setq" code nil nil [7597 7856]) ("vc-git" include nil nil [7921 7938]) ("add-to-list" code nil nil [7939 7978]) ("git" include nil nil [7979 7993]) ("git-blame-mode" function (:prototype-flag t :user-visible-flag t) nil [7994 8089]) ("global-set-key" code nil nil [8090 8126]) ("hippie-expand" function (:prototype-flag t) nil [8152 8192]) ("eval-after-load" code nil nil [8193 8274]) ("add-hook" code nil nil [8316 8366]) ("add-hook" code nil nil [8383 8437]) ("add-hook" code nil nil [8438 8490]) ("enable-rct" function nil nil [8493 8570]) ("add-hook" code nil nil [8580 8634]) ("add-hook" code nil nil [8635 8677]) ("add-hook" code nil nil [8679 8733]) ("when" code nil nil [8758 8828]) ("when" code nil nil [8831 9152]) ("when" code nil nil [9212 9826]) ("ruby-mode" function (:prototype-flag t :user-visible-flag t) nil [9835 9874]) ("haml-mode" function (:prototype-flag t :user-visible-flag t) nil [9875 9914]) ("yaml-mode" function (:prototype-flag t :user-visible-flag t) nil [9915 9954]) ("setq" code nil nil [9955 10238]) ("setq" code nil nil [10240 10266]) ("pretty-lambdas" function nil nil [10272 10550]) ("message" code nil nil [10936 11115]) ("setq" code nil nil [11117 11142]))
    :file "emacs-init.el"
    :pointmax 11144
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )

;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables (list 
   (semanticdb-table "emacs-init.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [250 263]) ("*emacs-load-start*" variable (:default-value (current-time)) nil [265 307]) ("setq" code nil nil [308 331]) ("*user-name*" variable (:default-value "Ryan Neufeld <neufelry@gmail.com>") nil [334 390]) ("*default-font*" variable (:default-value "Anonymous") nil [392 428]) ("*folding*" variable nil nil [429 457]) ("*tramp*" variable (:default-value t) nil [483 509]) ("*cedet*" variable (:default-value t) nil [541 567]) ("*color-theme*" variable (:default-value t) nil [621 647]) ("*yasnippet*" variable (:default-value t) nil [688 714]) ("*timestamp*" variable (:default-value t) nil [766 792]) ("*slime*" variable (:default-value t) nil [837 863]) ("*clojure*" variable (:default-value t) nil [881 907]) ("*ido*" variable (:default-value t) nil [928 954]) ("*fuzzy-find*" variable (:default-value t) nil [971 997]) ("setq" code nil nil [1026 1071]) ("add-path" function (:arguments ("p")) nil [1072 1145]) ("add-path" code nil nil [1192 1205]) ("add-path" code nil nil [1207 1225]) ("add-path" code nil nil [1226 1244]) ("when" code nil nil [1312 1542]) ("when" code nil nil [1544 1666]) ("print" code nil nil [1668 1691]) ("when" code nil nil [1692 2772]) ("custom-set-variables" code nil nil [2774 4122]) ("when" code nil nil [4164 4462]) ("set-register" code nil nil [4464 4518]) ("set-register" code nil nil [4535 4585]) ("when" code nil nil [4601 4798]) ("fset" code nil nil [4863 4892]) ("go-back-window" function nil nil [4918 4995]) ("set-newline-and-indent" function nil nil [5046 5124]) ("insert-name-email" function nil nil [5126 5193]) ("insert-date" function (:user-visible-flag t :arguments ("prefix")) nil [5195 5597]) ("global-set-key" code nil nil [5747 5826]) ("global-set-key" code nil nil [5827 5907]) ("global-set-key" code nil nil [5908 5979]) ("global-set-key" code nil nil [5980 6052]) ("global-set-key" code nil nil [6054 6096]) ("global-set-key" code nil nil [6097 6145]) ("global-set-key" code nil nil [6179 6228]) ("global-set-key" code nil nil [6229 6271]) ("global-set-key" code nil nil [6329 6377]) ("global-set-key" code nil nil [6436 6491]) ("global-set-key" code nil nil [6492 6547]) ("global-set-key" code nil nil [6548 6603]) ("global-set-key" code nil nil [6604 6659]) ("global-set-key" code nil nil [6661 6703]) ("global-set-key" code nil nil [6704 6752]) ("defalias" code nil nil [6793 6830]) ("setq" code nil nil [6861 7120]) ("js2-mode" include nil nil [7239 7258]) ("setq" code nil nil [7259 7284]) ("vc-git" include nil nil [7303 7320]) ("add-to-list" code nil nil [7321 7360]) ("git" include nil nil [7361 7375]) ("git-blame-mode" function (:prototype-flag t :user-visible-flag t) nil [7376 7471]) ("global-set-key" code nil nil [7472 7508]) ("hippie-expand" function (:prototype-flag t) nil [7534 7574]) ("eval-after-load" code nil nil [7575 7656]) ("add-hook" code nil nil [7698 7748]) ("add-hook" code nil nil [7765 7819]) ("add-hook" code nil nil [7820 7872]) ("add-hook" code nil nil [7882 7936]) ("add-hook" code nil nil [8002 8056]) ("when" code nil nil [8081 8150]) ("when" code nil nil [8154 10087]) ("setq" code nil nil [10131 10205]) ("ruby-mode" function (:prototype-flag t :user-visible-flag t) nil [10207 10246]) ("haml-mode" function (:prototype-flag t :user-visible-flag t) nil [10247 10286]) ("yaml-mode" function (:prototype-flag t :user-visible-flag t) nil [10287 10326]) ("setq" code nil nil [10327 10642]) ("setq" code nil nil [10644 10670]) ("message" code nil nil [10673 10852]) ("setq" code nil nil [10854 10879]))
    :file "emacs-init.el"
    :pointmax 10882
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )

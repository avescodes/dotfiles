;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables (list 
   (semanticdb-table "emacs-init.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [250 263]) ("*emacs-load-start*" variable (:default-value (current-time)) nil [265 307]) ("setq" code nil nil [308 331]) ("*user-name*" variable (:default-value "Ryan Neufeld <neufelry@gmail.com>") nil [334 390]) ("*default-font*" variable (:default-value "Anonymous") nil [392 428]) ("*folding*" variable nil nil [429 457]) ("*tramp*" variable (:default-value t) nil [483 509]) ("*cedet*" variable (:default-value t) nil [541 567]) ("*color-theme*" variable (:default-value t) nil [621 647]) ("*yasnippet*" variable (:default-value t) nil [688 714]) ("*timestamp*" variable (:default-value t) nil [766 792]) ("*slime*" variable (:default-value t) nil [837 863]) ("*clojure*" variable (:default-value t) nil [881 907]) ("*ido*" variable (:default-value t) nil [928 954]) ("*fuzzy-find*" variable (:default-value t) nil [971 997]) ("setq" code nil nil [1026 1066]) ("add-path" function (:arguments ("p")) nil [1067 1140]) ("add-path" code nil nil [1187 1200]) ("add-path" code nil nil [1201 1219]) ("add-path" code nil nil [1220 1238]) ("when" code nil nil [1306 1536]) ("when" code nil nil [1538 1660]) ("print" code nil nil [1662 1685]) ("when" code nil nil [1686 2816]) ("custom-set-variables" code nil nil [2818 4166]) ("when" code nil nil [4208 4506]) ("set-register" code nil nil [4508 4562]) ("set-register" code nil nil [4579 4629]) ("when" code nil nil [4645 4843]) ("fset" code nil nil [4910 4939]) ("go-back-window" function nil nil [4965 5042]) ("set-newline-and-indent" function nil nil [5093 5171]) ("insert-name-email" function nil nil [5173 5240]) ("insert-date" function (:user-visible-flag t :arguments ("prefix")) nil [5242 5644]) ("global-set-key" code nil nil [5794 5873]) ("global-set-key" code nil nil [5874 5954]) ("global-set-key" code nil nil [5955 6026]) ("global-set-key" code nil nil [6027 6099]) ("global-set-key" code nil nil [6101 6143]) ("global-set-key" code nil nil [6144 6192]) ("global-set-key" code nil nil [6226 6275]) ("global-set-key" code nil nil [6276 6318]) ("global-set-key" code nil nil [6376 6424]) ("global-set-key" code nil nil [6483 6538]) ("global-set-key" code nil nil [6539 6594]) ("global-set-key" code nil nil [6595 6650]) ("global-set-key" code nil nil [6651 6706]) ("global-set-key" code nil nil [6708 6750]) ("global-set-key" code nil nil [6751 6799]) ("defalias" code nil nil [6840 6877]) ("setq" code nil nil [6908 7167]) ("js2-mode" include nil nil [7286 7305]) ("setq" code nil nil [7306 7331]) ("vc-git" include nil nil [7350 7367]) ("add-to-list" code nil nil [7368 7407]) ("git" include nil nil [7408 7422]) ("git-blame-mode" function (:prototype-flag t :user-visible-flag t) nil [7423 7518]) ("global-set-key" code nil nil [7519 7555]) ("hippie-expand" function (:prototype-flag t) nil [7581 7621]) ("eval-after-load" code nil nil [7622 7703]) ("add-hook" code nil nil [7745 7795]) ("add-hook" code nil nil [7812 7866]) ("add-hook" code nil nil [7867 7919]) ("add-hook" code nil nil [7929 7983]) ("add-hook" code nil nil [7984 8026]) ("add-hook" code nil nil [8028 8082]) ("when" code nil nil [8107 8176]) ("when" code nil nil [8180 10113]) ("setq" code nil nil [10157 10231]) ("ruby-mode" function (:prototype-flag t :user-visible-flag t) nil [10233 10272]) ("haml-mode" function (:prototype-flag t :user-visible-flag t) nil [10273 10312]) ("yaml-mode" function (:prototype-flag t :user-visible-flag t) nil [10313 10352]) ("setq" code nil nil [10353 10668]) ("setq" code nil nil [10670 10696]) ("message" code nil nil [10699 10878]) ("setq" code nil nil [10880 10905]))
    :file "emacs-init.el"
    :pointmax 10908
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
